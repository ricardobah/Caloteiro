{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _stringWidth = require('string-width');\n\nvar _stringWidth2 = _interopRequireDefault(_stringWidth);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar alignments = ['left', 'right', 'center'];\n/**\n * @param {string} subject\n * @param {number} width\n * @returns {string}\n */\n\nvar alignLeft = function alignLeft(subject, width) {\n  return subject + ' '.repeat(width);\n};\n/**\n * @param {string} subject\n * @param {number} width\n * @returns {string}\n */\n\n\nvar alignRight = function alignRight(subject, width) {\n  return ' '.repeat(width) + subject;\n};\n/**\n * @param {string} subject\n * @param {number} width\n * @returns {string}\n */\n\n\nvar alignCenter = function alignCenter(subject, width) {\n  var halfWidth;\n  halfWidth = width / 2;\n\n  if (halfWidth % 2 === 0) {\n    return ' '.repeat(halfWidth) + subject + ' '.repeat(halfWidth);\n  } else {\n    halfWidth = Math.floor(halfWidth);\n    return ' '.repeat(halfWidth) + subject + ' '.repeat(halfWidth + 1);\n  }\n};\n/**\n * Pads a string to the left and/or right to position the subject\n * text in a desired alignment within a container.\n *\n * @param {string} subject\n * @param {number} containerWidth\n * @param {string} alignment One of the valid options (left, right, center).\n * @returns {string}\n */\n\n\nexports.default = function (subject, containerWidth, alignment) {\n  if (!_lodash2.default.isString(subject)) {\n    throw new TypeError('Subject parameter value must be a string.');\n  }\n\n  if (!_lodash2.default.isNumber(containerWidth)) {\n    throw new TypeError('Container width parameter value must be a number.');\n  }\n\n  var subjectWidth = (0, _stringWidth2.default)(subject);\n\n  if (subjectWidth > containerWidth) {\n    // console.log('subjectWidth', subjectWidth, 'containerWidth', containerWidth, 'subject', subject);\n    throw new Error('Subject parameter value width cannot be greater than the container width.');\n  }\n\n  if (!_lodash2.default.isString(alignment)) {\n    throw new TypeError('Alignment parameter value must be a string.');\n  }\n\n  if (alignments.indexOf(alignment) === -1) {\n    throw new Error('Alignment parameter value must be a known alignment parameter value (left, right, center).');\n  }\n\n  if (subjectWidth === 0) {\n    return ' '.repeat(containerWidth);\n  }\n\n  var availableWidth = containerWidth - subjectWidth;\n\n  if (alignment === 'left') {\n    return alignLeft(subject, availableWidth);\n  }\n\n  if (alignment === 'right') {\n    return alignRight(subject, availableWidth);\n  }\n\n  return alignCenter(subject, availableWidth);\n};","map":null,"metadata":{},"sourceType":"script"}