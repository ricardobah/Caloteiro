{"ast":null,"code":"import _classCallCheck from \"D:\\\\Usuarios\\\\ricardo.ribeiro\\\\Desktop\\\\Caloteiro\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Usuarios\\\\ricardo.ribeiro\\\\Desktop\\\\Caloteiro\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Usuarios\\\\ricardo.ribeiro\\\\Desktop\\\\Caloteiro\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Usuarios\\\\ricardo.ribeiro\\\\Desktop\\\\Caloteiro\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Usuarios\\\\ricardo.ribeiro\\\\Desktop\\\\Caloteiro\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Usuarios\\\\ricardo.ribeiro\\\\Desktop\\\\Caloteiro\\\\src\\\\caixa.js\";\nimport React, { Component } from 'react';\nimport { Dropdown, InputGroup, DropdownButton, FormControl, Button } from 'react-bootstrap';\nimport './switch.css';\nimport './chart.js';\nimport './caixa.css';\nimport ReactEcharts from 'echarts-for-react'; // render echarts option.\n\nvar Caixa =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Caixa, _Component);\n\n  function Caixa(props) {\n    var _this;\n\n    _classCallCheck(this, Caixa);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Caixa).call(this, props));\n    _this.state = {\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(Caixa, [{\n    key: \"getOtion\",\n    value: function getOtion() {\n      return {\n        title: {\n          show: true,\n          textStyle: {},\n          text: \"Média das medidas\",\n          left: '20px'\n        },\n        xAxis: {\n          name: 'Data',\n          type: 'category',\n          data: arraySensorDataData\n        },\n        yAxis: {\n          name: 'Valor',\n          type: 'value'\n        },\n        dataZoom: {\n          show: true,\n          id: 'dataZoomX',\n          type: 'slider',\n          filterMode: 'filter'\n        },\n        series: [{\n          name: 'Valor',\n          data: arraySensorDataValues,\n          type: 'bar'\n        }, {\n          name: 'Média',\n          type: 'line',\n          data: mediaSensorData\n        }],\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#283b56'\n            }\n          }\n        },\n        legend: {\n          left: 'center',\n          data: ['Valor', 'Média'] //Remover o \"DESATIVADO\" para ativar\n\n        },\n        toolbox: {\n          left: '950px',\n          show: true,\n          feature: {\n            saveAsImage: {\n              title: \"Baixar\"\n            }\n          }\n        },\n        grid: {\n          bottom: 80\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Caixa\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"Content  forf col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Relat\\xF3rio\")), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Gr\\xE1fico\"), React.createElement(\"div\", {\n        className: \"container col-lg12 col-md-12 col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        id: \"noData3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"mainSensorData\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(ReactEcharts, {\n        option: this.getOtion(),\n        style: {\n          height: '400px',\n          width: '100%'\n        },\n        opts: {\n          renderer: 'svg'\n        },\n        className: \"react_for_echarts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Caixa;\n}(Component);\n\nexport { Caixa };","map":{"version":3,"sources":["D:\\Usuarios\\ricardo.ribeiro\\Desktop\\Caloteiro\\src\\caixa.js"],"names":["React","Component","Dropdown","InputGroup","DropdownButton","FormControl","Button","ReactEcharts","Caixa","props","state","isLoading","title","show","textStyle","text","left","xAxis","name","type","data","arraySensorDataData","yAxis","dataZoom","id","filterMode","series","arraySensorDataValues","mediaSensorData","tooltip","trigger","axisPointer","label","backgroundColor","legend","toolbox","feature","saveAsImage","grid","bottom","getOtion","height","width","renderer"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\r\nimport {Dropdown,InputGroup,DropdownButton,FormControl,Button} from 'react-bootstrap'\r\nimport './switch.css'\r\nimport './chart.js'\r\nimport './caixa.css'\r\nimport ReactEcharts from 'echarts-for-react';\r\n \r\n// render echarts option.\r\n\r\nclass Caixa extends Component{\r\n    \r\n    constructor(props){\r\n        super(props)\r\n    \r\n        this.state = {\r\n          isLoading: false\r\n        }\r\n    }\r\n    \r\n    getOtion(){\r\n        return(\r\n\r\n                {\r\n                title: {\r\n                    show: true,\r\n                    textStyle: {\r\n                    },\r\n                    text: \"Média das medidas\",\r\n                    left: '20px'\r\n                \r\n                },\r\n        \r\n\r\n\r\n                xAxis: {\r\n                    name: 'Data',\r\n                    type: 'category',\r\n                    data: arraySensorDataData,\r\n                },\r\n                yAxis: {\r\n                    name: 'Valor',\r\n                    type: 'value'\r\n                },\r\n                dataZoom: {\r\n                    \r\n                    show: true,\r\n                    id: 'dataZoomX',\r\n                    type: 'slider',\r\n                    filterMode: 'filter',\r\n                \r\n                },\r\n                series: [{\r\n                    name: 'Valor',\r\n                    data: arraySensorDataValues,\r\n                    type: 'bar'\r\n                },\r\n                    {\r\n                        name: 'Média',\r\n                        type: 'line',\r\n                        data: mediaSensorData,\r\n                    }],\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    \r\n                    axisPointer: {\r\n\r\n                        type: 'cross',\r\n                        label: {\r\n                            backgroundColor: '#283b56'\r\n                        }\r\n                    }\r\n                }, legend: {\r\n                    left: 'center',\r\n                    data: ['Valor', 'Média'] //Remover o \"DESATIVADO\" para ativar\r\n                },\r\n                toolbox: {\r\n                    left: '950px',\r\n\r\n                    show: true,\r\n                    feature: {\r\n                        saveAsImage: { title: \"Baixar\" }\r\n\r\n                    }\r\n                }, grid: {\r\n                    bottom: 80\r\n                },\r\n                \r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div>\r\n                <br/>\r\n                    <h2>Caixa</h2>\r\n                <br/>\r\n           \r\n                <div className=\"Content  forf col-12\">\r\n                    <div className=\"col-6\">\r\n                        <h4>Relatório</h4>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <h4>Gráfico</h4>\r\n                        <div className=\"container col-lg12 col-md-12 col-sm-12\">\r\n                        {/* style=\" width:550px; height:50px; float:left; padding-bottom:100px; \" */}\r\n                            <h3 id=\"noData3\"></h3>\r\n                            {/* style=\"width: 1100px; height: 500px; float: left;\" */}\r\n                            <div id=\"mainSensorData\" ></div>\r\n                            <ReactEcharts \r\n                                option={this.getOtion()} \r\n                                style={{height: '400px', width: '100%'}}  \r\n                                opts={{renderer: 'svg'}}  \r\n                                className='react_for_echarts' />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {Caixa}"]},"metadata":{},"sourceType":"module"}